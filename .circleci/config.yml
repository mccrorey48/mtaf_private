# Python CirclieCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs: 
  econsole:
    docker:
        - image: circleci/python:2.7-browsers
    working_directory: ~/mtaf

    steps:
    - checkout

    - run:
       name: Install apt packages
       command: |
        sudo apt-get update
        sudo apt-get install libasound2-dev
        sudo apt-get install python-pip
        sudo apt-get install -y default-jre
        sudo curl -o allure-2.6.0.tgz -Ls https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.6.0/allure-2.6.0.tgz
        sudo tar -zxvf allure-2.6.0.tgz -C /opt/
        sudo ln -s /opt/allure-2.6.0/bin/allure /usr/bin/allure
    - run:
        name: Install the required python modules using a virtual enviroment
        command: |
            virtualenv venv
            . venv/bin/activate
            cd package/mtaf/
            . build_script
        when: on_success
    - run:
        name: Build pjsip libraries
        working_directory: ~/
        command: |
            virtualenv venv
            . venv/bin/activate
            git clone git@bitbucket.org:estech/pjproject.git
            cd pjproject/
            ./configure CFLAGS=-fPIC CCFLAGS=-fPIC
            make dep
            make
            cd pjsip-apps/src/python
            python setup.py install
    - run:
        name: run Regression Test
        when: always
        command: |
            echo 'export MTAF_SITE=mm_ro' >> $BASH_ENV
            echo 'PYTHONPATH=~/mtaf' >> $BASH_ENV
            source $BASH_ENV
            virtualenv venv
            . venv/bin/activate
            behave -f allure_behave.formatter:AllureFormatter -o allure/results -D portal_server=staging -D user_scope=premier --tags=premier --tags=regression eConsole/features
            behave -f allure_behave.formatter:AllureFormatter -o allure/results -D portal_server=staging -D user_scope=office_mgr --tags=office_mgr --tags=regression eConsole/features
            behave -f allure_behave.formatter:AllureFormatter -o allure/results -D portal_server=staging -D user_scope=select --tags=select --tags=regression eConsole/features

    - run:
        name: Generate allure report
        when: always
        command: |
          allure generate allure/results -o allure/report

    - store_artifacts:
          path: tmp

    - store_artifacts :
          path: log

    - store_artifacts:
          path: allure

    #- store_artifacts:
          #path: allure-report

    - store_test_results:
          path: allure

    #- store_test_results:
          #path: allure-report

workflows:
  version: 2
  build:
    jobs:
      - econsole
